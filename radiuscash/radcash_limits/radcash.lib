#!/bin/bash

FUNC_MAX_UID (){
QUERY="SELECT MAX( uid ) FROM users"
MAX_UID=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$QUERY" 2>/dev/null`
MAX_UID=${MAX_UID:11:${#MAX_UID}}
}

UID_TO_SQL (){
QUERY="SELECT uid FROM users WHERE (deposit+credit)>=0 and blocked=0"
SQL=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$QUERY" 2>/dev/null`
SQL=${SQL:4:${#SQL}}
}

FUNC_HOTSPOT (){
touch $HOME_DIR/mac.tmp
for i in $SQL; do
QUERY="SELECT local_mac FROM users WHERE uid=$i"
MAC=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$QUERY" 2>/dev/null`
MAC=$(echo $MAC | awk '{print $2}')

if [[ $MAC != NULL && $MAC != "" ]]
then

if ! grep -q $MAC $HOME_DIR/mac.tmp
then
QUERY="SELECT gid FROM users WHERE uid=$i"
PROFILE=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$QUERY" 2>/dev/null`
PROFILE=$(echo $PROFILE | awk '{print $2}')

echo "add customer=admin username=$MAC" >>$UPLOAD
echo "create-and-activate-profile profile=$PROFILE "'"'$MAC'" customer=admin' >>$UPLOAD
echo $MAC >>mac.tmp
fi

fi

done
rm $HOME_DIR/mac.tmp
}

FUNC_PPP (){
for i in $SQL; do
QUERY="SELECT password FROM users WHERE uid=$i"
PASSWORD=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$QUERY" 2>/dev/null`
PASSWORD=$(echo $PASSWORD | awk '{print $2}')

if [[ $PASSWORD != NULL && $PASSWORD != "" ]]
then
QUERY="SELECT user, gid, framed_ip FROM users WHERE uid=$i"
SELECT=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$QUERY" 2>/dev/null`
USER=$(echo $SELECT | awk '{print $4}')
PROFILE=$(echo $SELECT | awk '{print $5}')
IPADDR=$(echo $SELECT | awk '{print $6}')

echo "add customer=admin username=$USER password=$PASSWORD ip-address=$IPADDR" >>$UPLOAD
echo "create-and-activate-profile profile=$PROFILE "'"'$USER'" customer=admin' >>$UPLOAD
fi

done
}



SSH_UPLOAD ()
{
for (( i=0;i!=$CONNECT_SUM;i++ )); do

scp -P $USERMAN_SSH_PORT $UPLOAD $USERMAN_LOGIN@$USERMAN_IP:/
STATUS=$?
if [ $STATUS -ne 0 ]; then
sleep $CONNECT_INTERVAL
else

CMD="/import file=$(basename $UPLOAD)"
for (( i=0;i!=$CONNECT_SUM;i++ )); do
ssh -p $USERMAN_SSH_PORT $USERMAN_LOGIN@$USERMAN_IP "${CMD}" > /dev/null
STATUS=$?
if [ $STATUS -ne 0 ]; then
sleep $CONNECT_INTERVAL
fi

done
break
fi

done
}
