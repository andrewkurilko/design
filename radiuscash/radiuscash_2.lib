#!/bin/bash

FUNC_LOG_LINC (){
echo "$DATE start" >>$LOG
if ! ([ -e $LOG_LINK ])
then
ln -s $LOG $LOG_LINK
fi
}

MAX_UID (){
INQUIRY="SELECT MAX( uid ) FROM users"
MAX=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$INQUIRY" 2>/dev/null`
MAX=${MAX:11:${#MAX}}
}

IPOE_ADD (){
for (( i=0; i <= $MAX; i++ ))
do
if [[ ${ARRAY_UID[$i]} -eq 1 ]]
then
INQUIRY="SELECT local_mac FROM users WHERE uid=$i"
SQL=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$INQUIRY" 2>/dev/null`
SQL=$(echo $SQL | awk '{print $2}')
if [[ $SQL != NULL && $SQL != "" ]]
then
echo "/tool user-manager user add customer=admin username=$SQL" >>$UPLOAD
else
echo "NULL in MAC uid $i" >>$LOG
ARRAY_UID[$i]="0"
fi
fi
done
}

IPOE_RM (){
INQUIRY="SELECT local_mac FROM users WHERE uid=$i"
SQL=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$INQUIRY" 2>/dev/null`
SQL=$(echo $SQL | awk '{print $2}')
echo '/tool user-manager user remove "'$SQL'"' >>$UPLOAD
}

PPP_ADD (){
for (( i=0; i <= $MAX; i++ ))
do
if [[ ${ARRAY_UID[$i]} -eq 1 ]]
then
INQUIRY="SELECT user, password FROM users WHERE uid=$i;"
SQL=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$INQUIRY" 2>/dev/null`
SQL=${SQL:14:${#SQL}}
fi
done
}

UID_TO_ARRAY_UID (){
INQUIRY="SELECT uid FROM users WHERE credit >= ABS (deposit) and blocked=0"
SQL=`mysql -D $DB_NAME -u $DB_USER -p$DB_PASSWORD -e "$INQUIRY" 2>/dev/null`
SQL=${SQL:4:${#SQL}}

for i in $SQL; do
ARRAY_UID[$i]="1"
done
}

LIST_TO_ARRAY_OLD (){
i=0
while read LINE; do
ARRAY_OLD[$i]=$LINE
let i=i+1
done < $LIST
}

UPLOAD_TO_MIKROTIK (){
for (( i=0;i!=$CONNECT_SUM;i++ )); do

scp -P $USERMAN_SSH_PORT $UPLOAD $USERMAN_LOGIN@$USERMAN_IP:/
STATUS=$?
if [ $STATUS -ne 0 ]; then
sleep $CONNECT_INTERVAL
else

CMD="/import file=$(basename $UPLOAD)"
for (( i=0;i!=$CONNECT_SUM;i++ )); do
ssh -p $USERMAN_SSH_PORT $USERMAN_LOGIN@$USERMAN_IP "${CMD}" > /dev/null
STATUS=$?
if [ $STATUS -ne 0 ]; then
sleep $CONNECT_INTERVAL
fi

done
break
fi

done
}

ARRAY_UID_TO_LIST (){
rm $LIST
for (( i=0; i <= $MAX; i++ ))
do

if [[ ${ARRAY_UID[$i]} -eq 1 ]]
then
echo "1" >> $LIST
else
echo "0" >> $LIST
fi

done
}
